{"version":3,"file":"router-1.0.0.js","sources":["../index.js","../src/main.js"],"sourcesContent":["class Router {\r\n  routes = [];\r\n  root = '/';\r\n  before;\r\n  page404;\r\n\r\n  constructor(options) {\r\n    if(options?.root) {\r\n      this.root = options.root === '/' ? '/' : '/' + this.trimSlashes(options.root) + '/';\r\n    }\r\n\r\n    if(typeof options?.before === 'function') {\r\n      this.before = options.before;\r\n    }\r\n\r\n    if(typeof options?.page404 === 'function') {\r\n      this.page404 = options.page404;\r\n    }\r\n\r\n    if(options?.routes?.length > 0) {\r\n      options.routes.forEach(route => {\r\n        this.add(route.rule, route.handler, route.options);\r\n      });\r\n    }\r\n  }\r\n\r\n  get fragment() {\r\n    let value = decodeURI(location.pathname);\r\n\r\n    if(this.root !== '/') {\r\n      value = value.replace(this.root, \"\");\r\n    }\r\n\r\n    return this.trimSlashes(value);\r\n  }\r\n\r\n  get query() {\r\n    return this.parseQuery(location.search);\r\n  }\r\n\r\n  add(rule, handler, options) {\r\n    this.routes.push({\r\n      rule: this.parseRouteRule(rule),\r\n      handler,\r\n      options\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  remove(param) {\r\n    if(typeof param === 'string') {\r\n      param = this.parseRouteRule(param);\r\n    }\r\n\r\n    this.routes.some((route, i) => {\r\n      if(route.handler === param || route.rule === param) {\r\n        this.routes.splice(i, 1);\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n\r\n\r\n    return this;\r\n  }\r\n\r\n  redirectTo(path, state) {\r\n    path = this.trimSlashes(path);\r\n\r\n    history.replaceState(state, null, this.root + path);\r\n\r\n    this.processUri();\r\n\r\n    return this;\r\n  }\r\n\r\n  navigateTo(path, state) {\r\n    path = this.trimSlashes(path);\r\n\r\n    history.pushState(state, null, this.root + path);\r\n\r\n    this.processUri();\r\n\r\n    return this;\r\n  }\r\n\r\n  refresh() {\r\n    return this.redirectTo(this.fragment + location.search, history.state);\r\n  }\r\n\r\n  trimSlashes(path) {\r\n    if(typeof path !== 'string') {\r\n      return '';\r\n    }\r\n    \r\n    return path.replace(/\\/$/, '').replace(/^\\//, '');\r\n  }\r\n\r\n  parseRouteRule(route) {\r\n    if(typeof route !== \"string\") {\r\n      return route;\r\n    }\r\n\r\n    let uri = this.trimSlashes(route);\r\n\r\n    let rule = uri\r\n      .replace(/([\\\\\\/\\-\\_\\.])/g, \"\\\\$1\")\r\n      .replace(/\\{[a-zA-Z]+\\}/g, \"(:any)\")\r\n      .replace(/\\:any/g, \"[\\\\w\\\\-\\\\_\\\\.]+\")\r\n      .replace(/\\:word/g, \"[a-zA-Z]+\")\r\n      .replace(/\\:num/g, \"\\\\d+\");\r\n\r\n    return new RegExp(\"^\" + rule + \"$\", \"i\");\r\n  }\r\n\r\n  parseQuery(query) {\r\n    let data = {};\r\n\r\n    if(typeof query !== \"string\") {\r\n      return data;\r\n    }\r\n\r\n    if(query[0] === '?') {\r\n      query = query.substr(1);\r\n    }\r\n\r\n    query.split('&').forEach(row => {\r\n      let parts = row.split('=');\r\n\r\n      if(parts[0] !== '') {\r\n        if(parts[1] === undefined) {\r\n          parts[1] = true;\r\n        }\r\n\r\n        data[decodeURIComponent(parts[0])] = parts[1];\r\n      }\r\n    });\r\n\r\n    return data;\r\n  }\r\n\r\n  findRoute() {\r\n    let fragment = this.fragment;\r\n\r\n    return this.routes.some(route => {\r\n      let match = fragment.match(route.rule);\r\n\r\n      if(match) {\r\n        match.shift();\r\n\r\n        let query = this.query;\r\n        let page = {\r\n          fragment,\r\n          query,\r\n          match,\r\n          options: route.options\r\n        };\r\n\r\n        let doBreak = this.before?.(page);\r\n\r\n        if(doBreak) {\r\n          return false;\r\n        }\r\n\r\n        route.handler?.(page);\r\n\r\n        return true;\r\n      }\r\n\r\n      return false;\r\n    });\r\n  }\r\n\r\n  processUri() {\r\n    let fragment = this.fragment;\r\n\r\n    let found = this.findRoute();\r\n\r\n    if(!found) {\r\n      this.page404?.(fragment);\r\n    }\r\n  }\r\n\r\n  addUriListener() {\r\n    window.onpopstate = this.processUri.bind(this);\r\n  }\r\n\r\n  removeUriListener() {\r\n    window.onpopstate = null;\r\n  }\r\n}\r\n\r\nexports.Router = Router;","const { Router } = require('../index');\r\n\r\nlet router = new Router({\r\n  routes: [{\r\n    rule: '',\r\n    handler(page) {\r\n      console.log(page);\r\n    }\r\n  },{\r\n    rule: 'hello/(:any)',\r\n    handler(page) {\r\n      console.log(page);\r\n    }\r\n  }, {\r\n    rule: 'category/(:num)/post/(:num)',\r\n    handler(page) {\r\n      console.log(page);\r\n    }\r\n  }, {\r\n    rule: 'search',\r\n    handler(page) {\r\n      console.log(page);\r\n    }\r\n  }]\r\n});\r\n\r\nwindow.router = router;\r\n    "],"names":["routes","root","before","page404","constructor","options","this","trimSlashes","length","forEach","route","add","rule","handler","fragment","value","decodeURI","location","pathname","replace","query","parseQuery","search","push","parseRouteRule","remove","param","some","i","splice","redirectTo","path","state","history","replaceState","processUri","navigateTo","pushState","refresh","RegExp","data","substr","split","row","parts","undefined","decodeURIComponent","findRoute","match","shift","page","doBreak","addUriListener","window","onpopstate","bind","removeUriListener","Router","require$$0","router","console","log"],"mappings":"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"}